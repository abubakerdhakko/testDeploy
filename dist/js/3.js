(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[3],{

/***/ "./src/services/InspectionService.js":
/*!*******************************************!*\
  !*** ./src/services/InspectionService.js ***!
  \*******************************************/
/*! exports provided: InspectionService, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InspectionService\", function() { return InspectionService; });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _EndPoints__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EndPoints */ \"./src/services/EndPoints.js\");\n\n\nconst InspectionService = {\n  async getPaginatedInspectionReports(offset, limit, tenantuuid) {\n    // debugger;\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectionreport?offset=' + offset + '&limit=' + limit + '&tenantuuid=' + tenantuuid;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  // submitted\n  async getPaginatedAdditonalInspections(offset, limit, tenantuuid, parentInspectionUUID) {\n    // debugger;\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectionreport?offset=' + offset + '&limit=' + limit + '&tenantuuid=' + tenantuuid + '&parentInspectionUUID=' + parentInspectionUUID;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedInspectionReportsForServiceRequest(offset, limit, tenantuuid, serviceRequestUUID) {\n    // debugger;\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectionreport?offset=' + offset + '&limit=' + limit + '&tenantuuid=' + tenantuuid + '&serviceRequestUUID=' + serviceRequestUUID;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedInspectionTemplatesForServiceRequest(offset, limit, tenantuuid, serviceRequestUUID) {\n    // debugger;\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectiontemplate?offset=' + offset + '&limit=' + limit + '&tenantUUID=' + tenantuuid + '&serviceRequestUUID=' + serviceRequestUUID + '&newAdditional=true';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  //pending...\n  async getPaginatedInspectionTemplatesForInspection(offset, limit, tenantuuid, parentInspectionUUID) {\n    // debugger;\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectiontemplate?offset=' + offset + '&limit=' + limit + '&tenantUUID=' + tenantuuid + '&parentInspectionUUID=' + parentInspectionUUID + '&newAdditional=true';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedIssues(requestBody) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues/sdt';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, requestBody).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedIssuesReport(requestBody) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issueReport/sdt';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, requestBody).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedServiceRequestReport(requestBody) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/serviceRequestReport/sdt';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, requestBody).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedInspectionReport(requestBody) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectionReport/sdt';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, requestBody).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedServiceRequests(requestObject) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/service-requests/sdt';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, requestObject).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedInspectionTemplatesForSDT(requestObject) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectionTemplate/sdt';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, requestObject).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedArchivedTemplatesForSDT(requestObject) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/archive/inspection-templates/sdt';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, requestObject).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedArchivedIssuesForSDT(requestObject) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/archived/issues/sdt';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, requestObject).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedArchivedInspectionsForSDT(requestObject) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/archive/inspection-report/sdt';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, requestObject).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedPendingInspectionReportsForSDT(requestObject) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/pending/inspection-report/sdt';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, requestObject).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedInspectionReportsForSDT(requestObject) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspection-report/sdt';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, requestObject).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getFile(fileUrl) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/files?url=' + fileUrl;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getIssuesDetailByIssuesUUID(issueUUIDs) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issuedetails';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, issueUUIDs).then(responseJson => {\n        return responseJson;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getImageVoicesByIssueUUIDSOrFieldUUIDS(uuids) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/imagevoices';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, {\n        uuids: uuids\n      }).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getIssuesReports(request) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues/report';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, request).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getInspectionReports(request) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues/inspectionreport';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, request).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getServiceRequestReports(request) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues/servicereport';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, request).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getImageVoicesByIssueUUIDOrFieldUUID(uuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/imagevoices';\n    const params = {\n      uuid: uuid\n    };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getOpenInspectionReportsByAssetUUID(assetuuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectionreport?assetuuid=' + assetuuid;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedInspectionTemplates(offset, limit) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectiontemplate?offset=' + offset + '&limit=' + limit;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async addInspectionTemplateOfMultipleAssets(requestBody) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectiontemplate/bulk';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, requestBody).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async addInspectionTemplateOfServiceRequest(requestBody) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectiontemplate';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, requestBody).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async assignScheduleInspectionTemplate(requestBody) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspection-template/assign';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, requestBody).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async updateAssignScheduleInspectionTemplate(requestBody) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspection-template/assign';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.put(url, requestBody).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async uploadFile(MultipartFiles) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/files';\n    let formData = new FormData();\n    formData.append('file', MultipartFiles);\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, formData).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async addInspectionTemplateOfInspectionRequest(requestBody) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectiontemplate';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, requestBody).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async updateInspectionTemplateOfMultipleAssets(requestBody) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectiontemplate/bulk';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.put(url, requestBody).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async updateIssue(requestBody) {\n    // console.log(requestBody);\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.put(url, requestBody).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async updateServiceRequest(requestBody) {\n    // console.log(requestBody);\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/service-request';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.put(url, requestBody).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async servicerequestRelatedIssues(uuid, limit, offset) {\n    // console.log(requestBody);\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/service-request/issues?uuid=' + uuid + '&limit=' + limit + '&offset=' + offset;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async addIssue(requestBody) {\n    // console.log(requestBody);\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, requestBody).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async filterIssuesByAssetUUID(assetuuid, status = \"any\") {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues/filter?assetuuid=' + assetuuid + '&status=' + status;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedIssuesByAsset(assetuuid, status = \"any\", offset, limit) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues/asset?assetuuid=' + assetuuid + '&status=' + status + '&offset=' + offset + '&limit=' + limit;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async linkIssues(request) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues/link';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.put(url, request).then(responseJson => {\n        return responseJson;\n      }).catch(({\n        response\n      }) => {\n        throw response;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getLinkedIssues(issueUUID) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues/link?issueuuid=' + issueUUID;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async deleteIssueImage(issueUUID) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/image/?uuid=' + issueUUID;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.delete(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getIssueCount(uuids) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/assets/issues';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, uuids).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getInspectionTempaltesByAsset(assetuuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/assets/inspectiontemplates/all?assetuuid=' + assetuuid;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getServiceRequestByUUID(uuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/servicerequests?uuid=' + uuid;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getInspectionTemplateNameAndUUID(assetUUID, tenantUUID) {\n    let params = {\n      tenantuuid: tenantUUID,\n      assetuuid: assetUUID\n    };\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectiontemplate/all';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getInspectionTemplateNameAndUUIDByCategoryUUID(categoryUUID) {\n    let params = {\n      categoryuuid: categoryUUID\n    };\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectiontemplate/all';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getInspectionTemplateByUUID(templateUUID, tenantUUID) {\n    let params = {\n      uuid: templateUUID,\n      tenantUUID: tenantUUID\n    };\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectiontemplate';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async ignoreInspectionItems(requestBody) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues/ignoreInspectionItems';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.put(url, requestBody).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getImageVoicesByInspectionItemUUID(uuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/imagesvoices/inspection-item?uuid=' + uuid;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async deleteInspectionTemplateByUUID(templateUUID, type) {\n    let params = {\n      id: templateUUID,\n      type: type\n    };\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectiontemplate';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.delete(url, {\n        params: params\n      }).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async restoreInspectionTemplate(uuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/restore/inspection-template?uuid=' + uuid;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.put(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async restoreInspection(uuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/restore/inspection-report?uuid=' + uuid;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.put(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async restoreIssue(uuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/restore/issues?uuid=' + uuid;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.put(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async deleteInspectionByUUID(templateUUID, type) {\n    let params = {\n      id: templateUUID,\n      type: type\n    };\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectionreport';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.delete(url, {\n        params: params\n      }).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async deleteIssues(uuid, type) {\n    let params = {\n      uuid: uuid,\n      type: type\n    };\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.delete(url, {\n        params: params\n      }).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getInspectionWallByInspectionReportUUID(inspectionReportUUID) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectionreport/wall';\n    const params = {\n      inspectionreportuuid: inspectionReportUUID\n    };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getInspectionReportByUUID(uuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectionreport';\n    const params = {\n      id: uuid\n    };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async addReplyToMessage(body) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectionreport/wall/reply';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, JSON.stringify(body)).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async addNewMessage(body) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectionreport/wall/messages';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, JSON.stringify(body)).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getIssueByUUID(issueUUID) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues';\n    let params = {\n      id: issueUUID\n    };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getInspectionbyIssueUUID(issueuuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues/inspection';\n    let params = {\n      issueuuid: issueuuid\n    };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getIssueWallByIssueUUID(uuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues/wall';\n    const params = {\n      issueuuid: uuid\n    };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async addReplyToIssueMessage(body) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues/wall/reply';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, JSON.stringify(body)).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async addNewIssueMessage(body) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues/wall/messages';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, JSON.stringify(body)).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getInspectionReportByDate(body) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectionreport/calender/events';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, JSON.stringify(body)).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getInspectionDates(tenantUUID) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspections/calender/dates';\n    const params = {\n      tenantUUID: tenantUUID\n    };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getInspectionTemplatesPendingandSubmitted(GetPaginatedAdditionalInspectionRequest) {\n    // debugger;\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/additional/inspection';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, GetPaginatedAdditionalInspectionRequest).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedAssetRelatedIssues(request) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues/asset';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, request).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedIssueCategoryRelatedIssues(request) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/issues/issue-category';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, request).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async deleteOrArchiveServiceRequest(uuid, processType) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/service-requests?uuid=' + uuid + '&processType=' + processType;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.delete(url).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getAllInspectionTemplates(tenentUUID) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inspectionService.inspection + '/inspectionTemplate/all';\n    const params = {\n      tenantUUID: tenentUUID\n    };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  }\n\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (InspectionService);\n\n//# sourceURL=webpack:///./src/services/InspectionService.js?");

/***/ })

}]);