(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[2],{

/***/ "./src/services/AssetPersonnelService.js":
/*!***********************************************!*\
  !*** ./src/services/AssetPersonnelService.js ***!
  \***********************************************/
/*! exports provided: AssetPersonnelService, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AssetPersonnelService\", function() { return AssetPersonnelService; });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _EndPoints__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EndPoints */ \"./src/services/EndPoints.js\");\n\n\nconst AssetPersonnelService = {\n  async saveUserToken(body) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/tokens';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, JSON.stringify(body)).then(responseJson => {\n        if (responseJson.data.responseCode === '200') {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      // debugger;\n      throw e;\n    }\n  },\n\n  async deleteUserToken(useruuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/tokens?useruuid=' + useruuid + \"&clienttype=web\";\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.delete(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getOrgConfigs(tenantuuid, configType) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/orgConfig?orgUUID=' + tenantuuid + '&configType=' + configType;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        if (responseJson.status === 200) {\n          // console.log('sssssssssssssss',responseJson)\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getAllUsers(tenantuuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/users/all?tenantuuid=' + tenantuuid;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getUserNameAndUUID(tenantuuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/users/name?tenantUUID=' + tenantuuid;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedUsersForSDT(requestObject) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/users/sdt';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, requestObject).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getAllUsersManagement(offset, limit, tenantuuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/users?offset=' + offset + '&limit=' + limit + '&tenantuuid=' + tenantuuid;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        if (responseJson.status === 200) {\n          return responseJson;\n        } else {\n          return null;\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getNameOfUsersByUUIDS(uuids) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/users/issues/tableview';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, uuids).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getAssignedUsersOfAsset(assetuuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/assignments?assetuuid=' + assetuuid;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async deletePostAssignmentByUUID(uuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/post/assignment?uuid=' + uuid;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.delete(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async unassignAsset(DeleteAssignmentRecordRequest) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/assignments';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.put(url, DeleteAssignmentRecordRequest).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getUserDetailByAssetIdAndUserId(assetuuid, useruuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/assignments/user?assetuuid=' + assetuuid + '&useruuid=' + useruuid;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async addAssignmentRecord(addAssignmentRecordRequest) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/assignments';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, addAssignmentRecordRequest).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async sendNotificationToAssignedUsers(addAssignmentRecordRequest) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/notifications/assignment';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, addAssignmentRecordRequest).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async editAssignmentRecord(addAssignmentRecordRequest) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/assignment';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.put(url, addAssignmentRecordRequest).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getAssignmentHistoryByAsset(assetuuid, offset, limit) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/assignments/history?assetuuid=' + assetuuid + '&offset=' + offset + '&limit=' + limit;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getUser(uuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/users?id=' + uuid;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getRole(roleName, orgId) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/roles?name=' + roleName + '&organizationUUID=' + orgId;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async createRole(createRoleRequest) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/roles';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, createRoleRequest).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async createCompany(company) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/register';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, company).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async createCurrency(body) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/company/currency';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, JSON.stringify(body)).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async deleteCompany(uuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/company?id=' + uuid;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.delete(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getAssignmentCount(assetNumber) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/assignments/count?assetUUID=' + assetNumber;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getCompany(uuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/company?id=' + uuid;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getCompanyCurrency(uuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/company/currency?tenantuuid=' + uuid;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async updateUser(body) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/users';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.put(url, JSON.stringify(body)).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      console.error(JSON.stringify(e));\n      throw e;\n    }\n  },\n\n  async updateCompany(body) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/company'; // console.log(body)\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.put(url, JSON.stringify(body)).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      console.error(JSON.stringify(e));\n      throw e;\n    }\n  },\n\n  async createUser(body) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/users';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, JSON.stringify(body)).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      console.error(JSON.stringify(e));\n      throw e;\n    }\n  },\n\n  async createGroup(body) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/users/group';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, JSON.stringify(body)).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      console.error(JSON.stringify(e));\n      throw e;\n    }\n  },\n\n  async updateGroup(body) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/users/groups';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.put(url, JSON.stringify(body)).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      console.error(JSON.stringify(e));\n      throw e;\n    }\n  },\n\n  async getUserGroupNameAndUUID(tenantUUID, offset, limit) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/users/group/page';\n    const params = {\n      tenantuuid: tenantUUID,\n      offset: offset,\n      limit: limit\n    };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedUserGroupsForSDT(requestObj) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/groups/sdt';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, requestObj).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getPaginatedNotifications(useruuid, offset, limit) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/notifications';\n    const params = {\n      useruuid: useruuid,\n      offset: offset,\n      limit: limit\n    };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getAllUserGroup(tenantUUID) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/users/group';\n    const params = {\n      tenantuuid: tenantUUID\n    };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getUserAssetsByUserUuid(uuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/assets/user';\n    const params = {\n      uuid: uuid\n    };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getUserGroupAssetsByUserGroupUuid(uuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/assets/user-group';\n    const params = {\n      uuid: uuid\n    };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async checkAssignmentOfAnAssetByUUID(uuid) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/asset/assignment?uuid=' + uuid; // const params = {\n    //     uuid: uuid,\n    // };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getUserGroupByUUID(groupUUID) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/users/group';\n    const params = {\n      uuid: groupUUID\n    };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async addUsersToGroup(groupUUID, userUUIDs) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/users/group';\n    const body = {\n      groupUUID: groupUUID,\n      userUUIDs: userUUIDs\n    };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.put(url, JSON.stringify(body)).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async deleteUsersFromGroup(groupUUID, userUUIDs) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/users/groups';\n    const body = {\n      groupUUID: groupUUID,\n      userUUIDs: userUUIDs\n    };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, JSON.stringify(body)).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getAllRoles(organizationUUID) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/roles/all?organizationUUID=' + organizationUUID;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async saveAllRoles(roles) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/roles/update/all';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, roles).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async deleteRole(roleName, organizationUUID) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/roles?name=' + roleName + '&organizationUUID=' + organizationUUID;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.delete(url).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async createIssueNotifciation(assetuuid, issueNumber) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/issues/notifications?assetuuid=' + assetuuid + '&issueNumber=' + issueNumber;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async copyParentOrgConfigsToCustomerOrgConfigs(parentOrgUUID, customerOrgUUID) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/orgConfig/targetOrgConfig?parentOrgUUID=' + parentOrgUUID + '&targetOrgUUID=' + customerOrgUUID;\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async updateOrgConfig(request) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/orgConfig';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.put(url, request).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async markAllNotificationAsRead(userUUID) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/notifications/mark';\n    const params = {\n      useruuid: userUUID\n    };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async markNotificationAsRead(notificationUUID) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/notifications/mark';\n    const params = {\n      uuid: notificationUUID\n    };\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(response => {\n        return response;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async updatePreferencesNotifcation(request) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/users/preferences';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.put(url, request).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async addPostAssignmentOrUnAssignment(request) {\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/post/assignment';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(url, request).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  },\n\n  async getUsersNameAndUUIDByTenantUUID(tenantUUID) {\n    const params = {\n      tenantUUID: tenantUUID\n    };\n    const url = _EndPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"].assetPersonnelService.assetPersonnel + '/users';\n\n    try {\n      return await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: params\n      }).then(responseJson => {\n        return responseJson;\n      }).catch(error => {\n        throw error;\n      });\n    } catch (e) {\n      throw e;\n    }\n  }\n\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (AssetPersonnelService);\n\n//# sourceURL=webpack:///./src/services/AssetPersonnelService.js?");

/***/ })

}]);