import moment from 'moment'
import 'moment-timezone';
import Constants from './Constants'

import { Countries } from './Countries'
import Vue from 'vue';
import DateConversion from "../Functions/DateConversion";

// add filters and export

Vue.filter('dateTime', function (dateTimeString) {
    if (!dateTimeString) {
        return '-';
    }
    let momentDate = moment(dateTimeString);
    if (!momentDate) {
        return '-';
    }
    return momentDate.format(Constants.dateTimeFormat);
});
Vue.filter('dateTimeInit', function (dateTimeString) {
    if (!dateTimeString) {
        return '-';
    }
    let momentDate = moment(dateTimeString);
    if (!momentDate) {
        return '-';
    }
    return momentDate.format(Constants.dateTimeFormat2);
});

Vue.filter('date', function (dateTimeString) {
    if (!dateTimeString) {
        return '-';
    }
    let momentDate = moment(dateTimeString);
    if (!momentDate) {
        return '-';
    }
    return momentDate.format(Constants.dateFormat);
});

Vue.filter('time', function (dateTimeString) {
    if (!dateTimeString) {
        return '-';
    }
    let momentDate = moment(dateTimeString);
    if (!momentDate) {
        return '-';
    }
    return momentDate.format(Constants.timeFormat);
});

Vue.filter('slice', function (string, startIndex, endIndex) {
    if (!string) {
        return '';
    }
    return string.slice(startIndex, endIndex);
});
Vue.filter('countryByLocode', function (locode) {
    //TODO: get country name
    if (locode == null) {
        return '-'
    }
    else {
        for (let i = 0; i < Countries.length; i++) {
            if (locode.slice(0, 2) === Countries[i].code) {
                return Countries[i].name
            }
        }
    }
});
Vue.filter('dateTimeByTimeZone', function(dateTimeString, timeZoneRegion){
    if(!dateTimeString){
        return '-';
    }
    let momentDate = moment(dateTimeString);
    if(!momentDate){
        return '-';
    }
    var timeZoneNumber = DateConversion.fetchTimeZoneByCountry(timeZoneRegion);
    if(Math.sign(timeZoneNumber)===1){
        timeZoneNumber = "GMT +"+timeZoneNumber;
    }
    else{
        timeZoneNumber = "GMT "+timeZoneNumber;
    }

    return moment.tz(dateTimeString, timeZoneRegion).format(Constants.timeFormat);
    // return moment.tz(dateTimeString, timeZoneRegion).format(Constants.dateTimeFormat) + " "+timeZoneNumber;
});

Vue.filter('dateDayByTimeZone', function(timestamp, timeZoneRegion){
    if(!timestamp){
        return '-';
    }
    let referenceDate = moment.unix(timestamp);
    let todayDate = moment();
    if(referenceDate){
        var timeZoneNumber = DateConversion.fetchTimeZoneByCountry(timeZoneRegion);
        if(Math.sign(timeZoneNumber)===1){
            timeZoneNumber = "GMT +"+timeZoneNumber;
        }
        else{
            timeZoneNumber = "GMT "+timeZoneNumber;
        }
        referenceDate = moment.tz(timestamp, timeZoneRegion).startOf('day');
        todayDate = moment.tz(timeZoneRegion).startOf('day');
        let yesterday = todayDate.clone().subtract(1,'days').startOf('day');
        if(referenceDate.isSame(todayDate)){
            return 'Today';
        }
        if(referenceDate.isSame(yesterday)){
            return 'Yesterday';
        }
        return referenceDate.format(Constants.dateFormat);

    }

    return '-';
});

Vue.filter('fullName', function (data) {
    if (data) {
        return data.firstName + (data.lastName ? (' ' + data.lastName) : '');
    }
    return '';
});
