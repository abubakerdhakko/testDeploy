{"remainingRequest":"/home/alsharqi/Desktop/Deploy Fe-ui/fe-erohal-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alsharqi/Desktop/Deploy Fe-ui/fe-erohal-ui/src/views/reports/Reports.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/alsharqi/Desktop/Deploy Fe-ui/fe-erohal-ui/src/views/reports/Reports.vue","mtime":1661968702444},{"path":"/home/alsharqi/Desktop/Deploy Fe-ui/fe-erohal-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alsharqi/Desktop/Deploy Fe-ui/fe-erohal-ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/alsharqi/Desktop/Deploy Fe-ui/fe-erohal-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alsharqi/Desktop/Deploy Fe-ui/fe-erohal-ui/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}